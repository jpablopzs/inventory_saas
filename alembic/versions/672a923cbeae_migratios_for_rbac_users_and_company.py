"""migratios for RBAC users and Company

Revision ID: 672a923cbeae
Revises: 90197d248dc4
Create Date: 2024-10-18 02:36:37.270659

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '672a923cbeae'
down_revision: Union[str, None] = '90197d248dc4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('phone', sa.String(length=30), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=300), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('update_at', sa.DateTime(), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email', name='uq_email'),
    sa.UniqueConstraint('username', name='uq_username'),
    schema='auth'
    )
    op.create_index(op.f('ix_auth_user_email'), 'user', ['email'], unique=False, schema='auth')
    op.create_table('company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=False),
    sa.Column('tax_id', sa.String(length=20), nullable=False),
    sa.Column('phone', sa.String(length=30), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=False),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email', name='uq_company_email'),
    sa.UniqueConstraint('tax_id', name='uq_txt_id')
    )
    op.create_index(op.f('ix_company_email'), 'company', ['email'], unique=False)
    op.create_table('company_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=False),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], name='fk_company_id'),
    sa.ForeignKeyConstraint(['user_id'], ['auth.user.id'], name='fk_user_id'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('company_id', 'user_id', name='uq_company_user')
    )
    op.create_index(op.f('ix_company_user_company_id'), 'company_user', ['company_id'], unique=False)
    op.create_index(op.f('ix_company_user_user_id'), 'company_user', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_company_user_user_id'), table_name='company_user')
    op.drop_index(op.f('ix_company_user_company_id'), table_name='company_user')
    op.drop_table('company_user')
    op.drop_index(op.f('ix_company_email'), table_name='company')
    op.drop_table('company')
    op.drop_index(op.f('ix_auth_user_email'), table_name='user', schema='auth')
    op.drop_table('user', schema='auth')
    # ### end Alembic commands ###
